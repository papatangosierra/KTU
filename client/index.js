// Kodansha Indesign utility panel// Author: Paul Starr// Date: June 2018/* Create an instance of CSInterface. */var csInterface = new CSInterface();var counter = 0;/* GREP AUTOMATIONS *//* Add/reveal Section */$("h3#findreplaceh3").on("click", function () {	$("div#findreplace").slideToggle();})/* GREP: Fix Ellipses *//* Display tooltip on <li> mouseover */$("li#ellipses").mouseenter(	function () {		$("div#tooltip").html('<p>Replace all instances of three period characters with a single ellipsis character.</p>')	})	$("li#ellipses").mouseleave(	function () {		$("div#tooltip").html('')	})/* Call fixEllipses() in the host script */$("#ellipses").click( function () {		csInterface.evalScript("fixEllipses()")    })/* GREP: Unserif bad "I" characters *//* Display tooltip on <li> mouseover */$("li#unserif").mouseenter(	function () {		$("div#tooltip").html('<p>Change all instances of uppercase "I" character that are not the personal pronoun to lowercase "i".</p>')	})	$("li#unserif").mouseleave(	function () {		$("div#tooltip").html('')	})/* Call fixUnserif() in the host script */$("#unserif").click( function () {		csInterface.evalScript("fixUnserif()")    })/* GREP: Fix apostrophe direction on "'cause" and "'sup" */$("li#cause").mouseenter(	function () {		$("div#tooltip").html('<p>Change incorrect left single quote characters (&lsquo;) preceding contractions &rsquo;cause, &rsquo;cos, &rsquo;til, and &rsquo;sup to apostrophe.</p>')	})	$("li#cause").mouseleave(	function () {		$("div#tooltip").html('')	})/* Call fixCause() in the host script */$("#cause").click( function () {		csInterface.evalScript("fixCause()")    })/* GREP: Fix unserifed personal pronoun "I" characters */$("li#serif").mouseenter(	function () {		$("div#tooltip").html('<p>Change incorrectly unserifed "I" characters to the serifed version in Comiccrazy. (Comiccrazy uses the pipe character | to generate a serifed I.)</p>')	})	$("li#serif").mouseleave(	function () {		$("div#tooltip").html('')	})/* Call fixSerif() in the host script */$("#serif").click( function () {		csInterface.evalScript("fixSerif()")    })/* GREP: Make ordinals superscript */$("li#ordinals").mouseenter(	function () {		$("div#tooltip").html('<p>Make ordinal letters following numbers into superscript versions of themselves, across all fonts.</p>')	})	$("li#ordinals").mouseleave(	function () {		$("div#tooltip").html('')	})/* Call fixOrdinals() in the host script */$("#ordinals").click( function () {		csInterface.evalScript("fixOrdinals()")    })/* END GREP AUTOMATIONS *//* PAGE NUMBERING & SETUP TOOLS *//* Add/reveal Section */$("h3#pagetoolsh3").on("click", function () {	$("div#pagetools").slideToggle();})/* Reverse Binding Direction*/$("li#reversebinding").mouseenter(	function () {		$("div#tooltip").html('<p>Toggle the binding direction from its current direction, e.g. if binding direction is currently left-to-right, it will become right-to-left. </p>')	})	$("li#reversebinding").mouseleave(	function () {		$("div#tooltip").html('')	})/* Call reverseBindingDirection() in host script*/$("li#reversebinding").click( function () {		csInterface.evalScript("reverseBindingDirection()")    })/* Reverse Page Order*/$("li#reversepageorder").mouseenter(	function () {		$("div#tooltip").html('<p>Reverse the page order of pages in the InDesign document. Particularly useful with the binding direction toggle.</p>')	})	$("li#reversepageorder").mouseleave(	function () {		$("div#tooltip").html('')	})/* Call reverseBindingDirection() in host script*/$("li#reversepageorder").click( function () {		csInterface.evalScript("reversePageOrder()")    })/* Export Individual Pages *//* Display Tooltip */$("li#exportindiv").mouseenter(	function () {		$("div#tooltip").html('<p>Export individual PDFs of the the specified page numbers. Separate page numbers with a space.</p>')	})	$("li#exportindiv").mouseleave(	function () {		$("div#tooltip").html('')	})	/* Pass form contents as argument to exportIndividualPages() in host script*/$('form').submit( function (event) {		event.preventDefault();        var pageNumbers = $('input').val().split(' '); // Split page numbers into an array for validation        for (var i=0;i < pageNumbers.length; i++) {            if (/\D/g.test(pageNumbers[i])) { // if any of the page numbers given is not a digit                alert('One or more of the page numbers you gave is not a digit. This is bad.')                            }         }		console.log('string to evalScript is:' + 'exportIndividualPages("' + $('input').val() + '")' )		csInterface.evalScript('exportIndividualPages("' + $('input').val() + '")')    });/* END PAGE NUMBERING & SETUP TOOLS *//* OBJECT TOOLS *//* Add/reveal Section */$("h3#objecth3").on("click", function () {	$("div#object").slideToggle();})// Unlock All Items$("li#unlockall").mouseenter(	function () {		$("div#tooltip").html('<p>Unlock all items in document.</p>')	})	$("li#unlockall").mouseleave(	function () {		$("div#tooltip").html('')	});	$("li#unlockall").click( function () {		csInterface.evalScript("unlockAllItems()")    });/* END OBJECT TOOLS */